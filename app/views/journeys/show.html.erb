<% @page = "journeys-show" %>

<script src="http://isithackday.com/hacks/geo/yql-geo-library/yqlgeo.js"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCDw1Ba3y7gTlafSaFsLW7RmkOpmogonpw&sensor=true">
</script>
<script>

  var end_lat;
  var end_lon;
  var start_lat;
  var start_lon;

  var startLatLng
  var currLatLng;
  var endLatLng;

  var alert_distance = "<%= @journey.alert_distance %>";
  var alert_distance_integer = parseFloat(alert_distance);

  $(function(){
    $.get("<%= journey_url(@journey.id) %>.json", function(data){
      start_lat = data.journey.start_lat
    });
  });
  $(function(){
    $.get("<%= journey_url(@journey.id) %>.json", function(data){
      start_lon = data.journey.start_lon
    });
  });
  $(function(){
    $.get("<%= journey_url(@journey.id) %>.json", function(data){
      end_lat = data.journey.end_lat
    });
  });
  $(function(){
    $.get("<%= journey_url(@journey.id) %>.json", function(data){
      end_lon = data.journey.end_lon
    });
  });

  $(function(){
    function initiate_geolocation() {
      var watchPositionId = 0;
      var show_location;
      if (navigator.geolocation) {
        navigator.geolocation.clearWatch(watchPositionId);
        watchPositionId = navigator.geolocation.watchPosition(handle_geolocation_query, handle_errors);

      }
      else {
        yqlgeo.get('visitor', normalize_yql_response);
      }
    }

    function handle_errors(error) {
      switch(error.code) {
        case error.PERMISSION_DENIED: alert("user did not share geolocation data");
        break;
        case error.POSITION_UNAVAILABLE: alert("could not detect current position");
        break;
        case error.TIMEOUT: alert("retrieving position timedout");
        break;
        default: alert("We have no idea what happened. D'oh!");
        break;
      }
    }

    function normalize_yql_response(response) {
      if (response.error) {
        var error = { code : 0 };
        handle_error(error);
        return;
      }
      var position = {
        coords : {
          latitude: response.place.centroid.latitude,
          longitude: response.place.centroid.longitude
        },
        address :  {
          city: response.place.locality2.content,
          region: response.place.admin1.content,
          country: response.place.country.content
        }
      };
      handle_geolocation_query(position);
    }

    function handle_geolocation_query(position){

      var timestampDate = new Date(position.timestamp);
      var earthRadius = 3961.3; // Radius of the earth in miles
      var dLatitude = convertToRadian(end_lat - position.coords.latitude);
      var dLongitude = convertToRadian(end_lon - position.coords.longitude);
      var a = Math.sin(dLatitude / 2) * Math.sin(dLatitude / 2) + Math.cos(convertToRadian(position.coords.latitude)) * Math.cos(convertToRadian(end_lat)) * Math.sin(dLongitude / 2) * Math.sin(dLongitude / 2);
      var greatCircleDistance = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      var distance = earthRadius * greatCircleDistance;

      // THIS IS WHERE WE WILL UPDATE TO MAKE ALERT v NOTIFICATION DYNAMIC
      // Check distance against alert_distance
      if (distance < alert_distance_integer) {
        new Audio("/audios/buzz.mp3").play();
        alert("It's time to start packing up. You will be at your stop shortly.");
      } else {
        console.log("Don't Ping Yet")
      };

      console.log('alert_distance is less than ' + alert_distance_integer + ' miles away')
      console.log(distance + ' miles away');

      // Google Maps API

      var currLatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
      var startLatLng = new google.maps.LatLng(start_lat, start_lon);
      var endLatLng = new google.maps.LatLng(end_lat, end_lon);

      var mapOptions = {
        center: currLatLng,
        zoom: 12
      };

      var map = new google.maps.Map(document.getElementById("map-canvas"),
      mapOptions);   
 
 // Kyle - add image url here
      // var image = '';
        
      var marker;
      var infowindow;
      marker = new google.maps.Marker({
        position: currLatLng, 
        map: map,
        // icon: image,
        title: "Current Location" });

      var infowindow = new google.maps.InfoWindow({
        content: '<div id="content">'+
        '<p id="firstheading">Current Location</p>'+'</div>'
      });

      // Google Maps API Traffic Layer
      // var trafficLayer = new google.maps.TrafficLayer();
      // trafficLayer.setMap(map);

      // Directions API
      var directionsDisplay;
      directionsDisplay = new google.maps.DirectionsRenderer();

      directionsDisplay.setMap(map);
      var directionsService = new google.maps.DirectionsService();
      var request = {
        origin: currLatLng,
        destination: endLatLng,
        travelMode: google.maps.TravelMode.TRANSIT
      };

      directionsService.route(request, function(response, status) {
        if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
        }
      });
      
      // You can view the infoWindow when you click on the moving icon
      google.maps.event.addListener(marker, 'click', function() {
        infowindow.open(map,marker);
      });

      console.log(position.coords.latitude)
      $.get("/journeys/", {lat: position.coords.latitude, lon: position.coords.longitude, trip: <%= @journey.trip.id %>}, null, 'script')
    }

    function convertToRadian(numericDegree) {
      return numericDegree * Math.PI / 180;
    }

    google.maps.event.addDomListener(window, 'page:change', initiate_geolocation);  
  })
</script>

<div id="map-canvas"></div>

<div id="destination" class="text-center">
  <h1><%= @journey.name %></h1>
  <h3 id="position">Closest Stop: </h3>

  <h2>Destination: <%= @journey.stop.desc %></h2>
</div>